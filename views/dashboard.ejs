<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>🏢 Smart Building Dashboard</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">

  <style>
    /* styles are same as yours — omitted for brevity */
  </style>

  <script src="/socket.io/socket.io.js" defer></script>
  <script defer>
    document.addEventListener("DOMContentLoaded", () => {
      const body = document.body;
      const toggleBtn = document.querySelector('.dark-mode-toggle');
      const icon = toggleBtn.querySelector('i');
      const label = toggleBtn.querySelector('.mode-label');

      function setMode(mode) {
        if (mode === 'enabled') {
          body.classList.add('dark');
          icon.classList.replace('fa-moon', 'fa-sun');
          label.textContent = 'Light Mode';
        } else {
          body.classList.remove('dark');
          icon.classList.replace('fa-sun', 'fa-moon');
          label.textContent = 'Dark Mode';
        }
      }

      setMode(localStorage.getItem('darkMode') || 'disabled');

      toggleBtn.addEventListener('click', () => {
        const newMode = body.classList.contains('dark') ? 'disabled' : 'enabled';
        setMode(newMode);
        localStorage.setItem('darkMode', newMode);
      });

      const socket = io();
      const mlAlertBox = document.getElementById('ml-alert');

      socket.on('ml-alert', (msg) => {
        mlAlertBox.textContent = msg;
        mlAlertBox.style.display = 'block';
        setTimeout(() => {
          mlAlertBox.style.display = 'none';
        }, 10000);
      });

      const refreshBtn = document.querySelector('.refresh');
      let autoRefresh = true;

      refreshBtn.addEventListener('click', () => {
        autoRefresh = !autoRefresh;
        refreshBtn.innerHTML = autoRefresh
          ? '<i class="fas fa-sync-alt"></i> Auto-refreshing'
          : '<i class="fas fa-pause-circle"></i> Paused';
      });

      setInterval(() => {
        if (autoRefresh) location.reload();
      }, 3000);
    });
  </script>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1><i class="fas fa-building"></i> Smart Building Dashboard</h1>
      <span class="refresh"><i class="fas fa-sync-alt"></i> Auto-refreshing</span>
      <button class="dark-mode-toggle"><i class="fas fa-moon"></i> <span class="mode-label">Dark Mode</span></button>
    </div>

    <!-- 🔥 ML Alert Box -->
    <div id="ml-alert" class="status-alert" style="display: none;"></div>

    <% const now = new Date(); %>
    <% for (let floor = 1; floor <= 4; floor++) {
      const data = dataByFloor[floor];
      const updatedAt = data ? new Date(data.createdAt) : null;
      const diff = data ? Math.floor((now - updatedAt) / 1000) : null;
      const days = diff ? Math.floor(diff / 86400) : 0;
      const hrs = diff ? Math.floor((diff % 86400) / 3600) : 0;
      const mins = diff ? Math.floor((diff % 3600) / 60) : 0;
      const secs = diff ? diff % 60 : 0;
    %>
      <div class="floor-heading">🏢 Floor <%= floor %></div>

      <% if (data) { %>
        <% if (diff > 30) { %>
          <div class="status-alert">
            ⚠ Sensor inactive! No updates for <%= days %>d <%= hrs %>h <%= mins %>m <%= secs %>s
          </div>
        <% } %>

        <div class="card">
          <div class="sensor-box"><i class="fas fa-thermometer-half"></i>
            <div>
              <div class="sensor-label">Temperature</div>
              <div class="sensor-value"><%= data.temperature ?? 'N/A' %> °C</div>
            </div>
          </div>
          <div class="sensor-box"><i class="fas fa-tint"></i>
            <div>
              <div class="sensor-label">Humidity</div>
              <div class="sensor-value"><%= data.humidity ?? 'N/A' %> %</div>
            </div>
          </div>
          <div class="sensor-box"><i class="fas fa-smog"></i>
            <div>
              <div class="sensor-label">Gas</div>
              <div class="sensor-value"><%= data.gas ?? 'N/A' %></div>
            </div>
          </div>
          <div class="sensor-box"><i class="fas fa-fire"></i>
            <div>
              <div class="sensor-label">Flame</div>
              <div class="sensor-value"><%= data.flame ? "🔥 Detected" : "✅ Safe" %></div>
            </div>
          </div>
          <div class="sensor-box"><i class="fas fa-running"></i>
            <div>
              <div class="sensor-label">Motion</div>
              <div class="sensor-value"><%= data.motion ? "👤 Detected" : "✅ None" %></div>
            </div>
          </div>
          <div class="sensor-box"><i class="fas fa-ruler"></i>
            <div>
              <div class="sensor-label">Vibration</div>
              <div class="sensor-value"><%= data.vibration ?? 'N/A' %></div>
            </div>
          </div>
        </div>

        <% if (data.intruderImageURL) { %>
          <div class="camera-box">
            <h3><i class="fas fa-user-secret"></i> Intruder Detected (Floor <%= floor %>)</h3>
            <img src="<%= data.intruderImageURL %>" alt="Intruder Image" loading="lazy">
          </div>
        <% } %>

        <div style="text-align: center; margin-top: 10px; font-size: 14px;">
          <i class="fas fa-clock"></i> Last updated:
          <%= updatedAt.toLocaleString('en-IN', { timeZone: 'Asia/Kolkata' }) %>
        </div>
      <% } else { %>
        <p style="text-align: center; color: #888;">No data available for Floor <%= floor %></p>
      <% } %>
    <% } %>

    <div class="nav">
      <a href="/history">📜 View Historical Records</a>
      <a href="/charts">📈 View Charts</a>
      <a href="/live">📷 View ESP32-CAM</a>
    </div>
  </div>
</body>
</html>
