<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>📜 Historical Sensor Record</title>
  <link rel="stylesheet" href="/styles.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
  <style>
    :root {
      --bg-color: #eef2f7;
      --text-color: #2c3e50;
      --card-bg: #fff;
      --highlight: #d8000c;
      --highlight-bg: #ffd2d2;
      --btn-bg: #007bff;
      --btn-hover: #0056b3;
    }

    [data-theme="dark"] {
      --bg-color: #121212;
      --text-color: #f0f0f0;
      --card-bg: #1e1e1e;
      --highlight: #ff5555;
      --highlight-bg: #660000;
      --btn-bg: #2980b9;
      --btn-hover: #3498db;
    }

    body {
      font-family: 'Segoe UI', sans-serif;
      background-color: var(--bg-color);
      color: var(--text-color);
      margin: 0;
      padding: 20px;
      transition: background-color 0.3s ease, color 0.3s ease;
    }

    .container {
      max-width: 850px;
      margin: auto;
      background-color: var(--card-bg);
      padding: 30px;
      border-radius: 16px;
      box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
    }

    h1 {
      text-align: center;
      color: var(--text-color);
      margin-bottom: 30px;
    }

    .record p {
      font-size: 18px;
      margin: 8px 0;
      line-height: 1.6;
    }

    .highlight {
      color: var(--highlight);
      font-weight: bold;
      background: var(--highlight-bg);
      padding: 2px 6px;
      border-radius: 4px;
    }

    .timeline-controls {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 25px;
      flex-wrap: wrap;
      gap: 10px;
    }

    button {
      padding: 10px 20px;
      background-color: var(--btn-bg);
      color: white;
      font-weight: bold;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      transition: background-color 0.2s ease;
    }

    button:hover:not(:disabled) {
      background-color: var(--btn-hover);
    }

    button:disabled {
      background-color: #888;
      cursor: not-allowed;
    }

    .stats {
      background-color: #f5f8fa;
      padding: 20px;
      border-radius: 10px;
      margin-top: 25px;
      box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.05);
    }

    .stats h3 {
      margin-top: 0;
      color: #444;
    }

    .stats ul {
      padding-left: 20px;
    }

    .stats li {
      font-size: 16px;
      margin: 6px 0;
    }

    .back {
      text-align: center;
      margin-top: 40px;
    }

    .back a {
      text-decoration: none;
      color: var(--btn-bg);
      font-weight: bold;
    }

    .intruder-image {
      margin-top: 25px;
      text-align: center;
    }

    .intruder-image img {
      max-width: 100%;
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }

    .theme-toggle {
      position: fixed;
      top: 20px;
      right: 20px;
    }

    .theme-toggle button {
      padding: 8px 12px;
      background: var(--btn-bg);
      color: white;
      border: none;
      border-radius: 6px;
      cursor: pointer;
    }

    .theme-toggle button:hover {
      background: var(--btn-hover);
    }
  </style>
</head>
<body data-theme="light">
  <div class="theme-toggle">
    <button id="toggleTheme"><i class="fas fa-adjust"></i> Toggle Theme</button>
  </div>

  <div class="container">
    <h1>📜 Historical Sensor Record</h1>

    <div class="timeline-controls">
      <form method="GET" action="/history">
        <input type="hidden" name="index" value="<%= currentIndex - 1 %>">
        <input type="hidden" name="floor" value="<%= floor %>">
        <input type="hidden" name="intruder" value="<%= intruder %>">
        <button type="submit" <%= currentIndex <= 0 ? 'disabled' : '' %>>⬅ Previous</button>
      </form>

      <span>Viewing record <%= currentIndex + 1 %> of <%= total %></span>

      <form method="GET" action="/history">
        <input type="hidden" name="index" value="<%= currentIndex + 1 %>">
        <input type="hidden" name="floor" value="<%= floor %>">
        <input type="hidden" name="intruder" value="<%= intruder %>">
        <button type="submit" <%= currentIndex >= total - 1 ? 'disabled' : '' %>>Next ➡</button>
      </form>
    </div>

    <% if (record) { %>
      <div class="record">
        <p><strong>📅 Timestamp:</strong> <%= new Date(record.createdAt).toLocaleString() %></p>
        <p><strong>🌡 Temperature:</strong> <span class="<%= record.temperature > thresholds.temperature ? 'highlight' : '' %>"><%= record.temperature %> °C</span></p>
        <p><strong>💧 Humidity:</strong> <span class="<%= record.humidity > thresholds.humidity ? 'highlight' : '' %>"><%= record.humidity %> %</span></p>
        <p><strong>🌫 Gas:</strong> <span class="<%= record.gas > thresholds.gas ? 'highlight' : '' %>"><%= record.gas %></span></p>
        <p><strong>🔥 Flame:</strong> <%= record.flame ? "Yes" : "No" %></p>
        <p><strong>🚶 Motion:</strong> <%= record.motion ? "Yes" : "No" %></p>
        <p><strong>💥 Vibration:</strong> <span class="<%= (record.vibration ?? 0) > thresholds.vibration ? 'highlight' : '' %>"><%= record.vibration ?? 0.0 %></span></p>
      </div>

      <% if (record.intruderImage) { %>
        <div class="intruder-image">
          <h3>🚨 Intruder Image</h3>
          <img src="<%= record.intruderImage %>" alt="Intruder Image">
        </div>
      <% } %>

      <div class="stats">
        <h3>📊 Sensor Summary:</h3>
        <ul>
          <li>🌡 Temperature (avg/min/max): <%= stats.avgTemp %> °C / <%= stats.minTemp %> °C / <%= stats.maxTemp %> °C</li>
          <li>💧 Humidity (avg): <%= stats.avgHumidity %> %</li>
          <li>🌫 Gas (avg): <%= stats.avgGas %></li>
          <li>💥 Vibration (avg): <%= stats.avgVibration %></li>
        </ul>
      </div>
    <% } else { %>
      <p>No sensor record found.</p>
    <% } %>

    <div class="back">
      <a href="/">← Back to Dashboard</a>
    </div>
  </div>

  <script>
    // Theme toggle
    const themeBtn = document.getElementById('toggleTheme');
    const body = document.body;

    const savedTheme = localStorage.getItem('theme') || 'light';
    body.setAttribute('data-theme', savedTheme);

    themeBtn.addEventListener('click', () => {
      const newTheme = body.getAttribute('data-theme') === 'light' ? 'dark' : 'light';
      body.setAttribute('data-theme', newTheme);
      localStorage.setItem('theme', newTheme);
    });
  </script>
</body>
</html>
